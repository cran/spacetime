
R version 2.14.2 (2012-02-29)
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(spacetime)
Loading required package: sp
Loading required package: zoo

Attaching package: 'zoo'

The following object(s) are masked from 'package:base':

    as.Date, as.Date.numeric

Loading required package: xts
> library(maps)
> library(mapdata)
> library(maptools)
Loading required package: foreign
Loading required package: lattice
Checking rgeos availability: TRUE
> ###################################################
> ### code chunk number 48: spacetime.Rnw:1039-1049
> ###################################################
> library("diveMove")
Loading required package: stats4
Loading required package: caTools
Loading required package: bitops
Loading required package: RColorBrewer
> library("trip")
Loading required package: spatstat
Loading required package: mgcv
This is mgcv 1.7-13. For overview type 'help("mgcv-package")'.
Loading required package: deldir
deldir 0.0-16

     Please note: The process for determining duplicated points
     has changed from that used in version 0.0-9 (and previously).

spatstat 1.25-4 
Type 'help(spatstat)' for an overview of spatstat 
     'latest.news()' for news on latest version 
     'licence.polygons()' for licence information on polygon calculations
> locs = readLocs(gzfile(system.file(file.path("data", "sealLocs.csv.gz"),
+ 	package="diveMove")), idCol=1, dateCol=2,
+ 	dtformat="%Y-%m-%d %H:%M:%S", classCol=3,
+ 	lonCol=4, latCol=5, sep=";")
> 
> ringy = subset(locs, id == "ringy" & !is.na(lon) & !is.na(lat))
> coordinates(ringy) = ringy[c("lon", "lat")]
> tr = trip(ringy, c("time", "id"))
> 
> 
> ###################################################
> ### code chunk number 49: spacetime.Rnw:1052-1068
> ###################################################
> setAs("trip", "STTDF",
+ 	function(from) {
+ 		from$burst = from[[from@TOR.columns[2]]]
+ 		time = from[[from@TOR.columns[1]]]
+ 		#from = from[order(time),]
+         STIbox = STI(SpatialPoints(t(bbox(from))), range(time))
+ 		STT = new("STT", STIbox, traj = list(STI(geometry(from), time)))
+ 		new("STTDF", STT, data = from@data)
+ 	}
+ )
> x = as(tr, "STTDF")
> m = map2SpatialLines(map("world", 
+ 	xlim = c(-100,-50), ylim = c(40,77), plot=F))
> proj4string(m) = "+proj=longlat +datum=WGS84"
> plot(m, axes=TRUE, cex.axis =.7)
> plot(x, add=TRUE, col = "red")
> 
> 
> ###################################################
> ### code chunk number 50: spacetime.Rnw:1073-1075
> ###################################################
> plot(m, axes=TRUE, cex.axis =.7)
> plot(x, add=TRUE, col = "red")
> 
> 
> ###################################################
> ### code chunk number 51: spacetime.Rnw:1089-1098
> ###################################################
> library("adehabitatLT")
Loading required package: ade4

Attaching package: 'ade4'

The following object(s) are masked from 'package:spatstat':

    disc

The following object(s) are masked from 'package:base':

    within

Loading required package: adehabitatMA
Loading required package: CircStats
Loading required package: MASS
Loading required package: boot

Attaching package: 'boot'

The following object(s) are masked from 'package:spatstat':

    envelope

The following object(s) are masked from 'package:diveMove':

    logit

The following object(s) are masked from 'package:lattice':

    melanoma


Attaching package: 'adehabitatLT'

The following object(s) are masked from 'package:zoo':

    is.regular

> data("puechabonsp")
> locs = puechabonsp$relocs
> xy = coordinates(locs)
> da = as.character(locs$Date)
> da = as.POSIXct(strptime(as.character(locs$Date),"%y%m%d"), tz = "GMT") 
> ltr = as.ltraj(xy, da, id = locs$Name)
> foo = function(dt) dt > 100*3600*24
> l2 = cutltraj(ltr, "foo(dt)", nextr = TRUE)
> 
> ###################################################
> ### code chunk number 52: spacetime.Rnw:1102-1104 (eval = FALSE)
> ###################################################
> sttdf = as(l2, "STTDF")
> print(stplot(sttdf, by="time*id"))
> 
